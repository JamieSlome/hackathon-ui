// @ts-ignore
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * People in Need - Springboard Service
 * This backend is meant to be a simple CRUD service for supporting  collaboration between organizations and the beneficiaries supported by them.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Organization
 */
export interface Organization {
    /**
     * 
     * @type {number}
     * @memberof Organization
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Organization
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Organization
     */
    streetAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof Organization
     */
    state?: string;
    /**
     * 
     * @type {string}
     * @memberof Organization
     */
    zipcode?: string;
    /**
     * 
     * @type {string}
     * @memberof Organization
     */
    phoneNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof Organization
     */
    description?: string;
}

/**
 * Check if a given object implements the Organization interface.
 */
export function instanceOfOrganization(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OrganizationFromJSON(json: any): Organization {
    return OrganizationFromJSONTyped(json, false);
}

export function OrganizationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Organization {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'streetAddress': !exists(json, 'streetAddress') ? undefined : json['streetAddress'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'zipcode': !exists(json, 'zipcode') ? undefined : json['zipcode'],
        'phoneNumber': !exists(json, 'phoneNumber') ? undefined : json['phoneNumber'],
        'description': !exists(json, 'description') ? undefined : json['description'],
    };
}

export function OrganizationToJSON(value?: Organization | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'streetAddress': value.streetAddress,
        'state': value.state,
        'zipcode': value.zipcode,
        'phoneNumber': value.phoneNumber,
        'description': value.description,
    };
}

