/* tslint:disable */
/* eslint-disable */
/**
 * People in Need - Springboard Service
 * This backend is meant to be a simple CRUD service for supporting  collaboration between organizations and the beneficiaries supported by them.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { OutcomeEvent } from './OutcomeEvent';
import {
    OutcomeEventFromJSON,
    OutcomeEventFromJSONTyped,
    OutcomeEventToJSON,
} from './OutcomeEvent';

/**
 * 
 * @export
 * @interface Beneficiary
 */
export interface Beneficiary {
    /**
     * 
     * @type {string}
     * @memberof Beneficiary
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Beneficiary
     */
    firstName?: string;
    /**
     * 
     * @type {string}
     * @memberof Beneficiary
     */
    lastName?: string;
    /**
     * 
     * @type {Date}
     * @memberof Beneficiary
     */
    dateOfBirth?: Date;
    /**
     * 
     * @type {string}
     * @memberof Beneficiary
     */
    identity?: string;
    /**
     * 
     * @type {string}
     * @memberof Beneficiary
     */
    phoneNumber?: string;
    /**
     * 
     * @type {number}
     * @memberof Beneficiary
     */
    cabinNumber?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof Beneficiary
     */
    needs?: Array<string>;
    /**
     * 
     * @type {OutcomeEvent}
     * @memberof Beneficiary
     */
    outcome?: OutcomeEvent;
    /**
     * 
     * @type {string}
     * @memberof Beneficiary
     */
    outcomeComment?: string;
    /**
     * 
     * @type {Date}
     * @memberof Beneficiary
     */
    outcomeDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Beneficiary
     */
    startDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Beneficiary
     */
    endDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof Beneficiary
     */
    comments?: string;
}

/**
 * Check if a given object implements the Beneficiary interface.
 */
export function instanceOfBeneficiary(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BeneficiaryFromJSON(json: any): Beneficiary {
    return BeneficiaryFromJSONTyped(json, false);
}

export function BeneficiaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): Beneficiary {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'firstName': !exists(json, 'firstName') ? undefined : json['firstName'],
        'lastName': !exists(json, 'lastName') ? undefined : json['lastName'],
        'dateOfBirth': !exists(json, 'dateOfBirth') ? undefined : (new Date(json['dateOfBirth'])),
        'identity': !exists(json, 'identity') ? undefined : json['identity'],
        'phoneNumber': !exists(json, 'phoneNumber') ? undefined : json['phoneNumber'],
        'cabinNumber': !exists(json, 'cabinNumber') ? undefined : json['cabinNumber'],
        'needs': !exists(json, 'needs') ? undefined : json['needs'],
        'outcome': !exists(json, 'outcome') ? undefined : OutcomeEventFromJSON(json['outcome']),
        'outcomeComment': !exists(json, 'outcomeComment') ? undefined : json['outcomeComment'],
        'outcomeDate': !exists(json, 'outcomeDate') ? undefined : (new Date(json['outcomeDate'])),
        'startDate': !exists(json, 'startDate') ? undefined : (new Date(json['startDate'])),
        'endDate': !exists(json, 'endDate') ? undefined : (new Date(json['endDate'])),
        'comments': !exists(json, 'comments') ? undefined : json['comments'],
    };
}

export function BeneficiaryToJSON(value?: Beneficiary | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'firstName': value.firstName,
        'lastName': value.lastName,
        'dateOfBirth': value.dateOfBirth === undefined ? undefined : (value.dateOfBirth.toISOString()),
        'identity': value.identity,
        'phoneNumber': value.phoneNumber,
        'cabinNumber': value.cabinNumber,
        'needs': value.needs,
        'outcome': OutcomeEventToJSON(value.outcome),
        'outcomeComment': value.outcomeComment,
        'outcomeDate': value.outcomeDate === undefined ? undefined : (value.outcomeDate.toISOString()),
        'startDate': value.startDate === undefined ? undefined : (value.startDate.toISOString()),
        'endDate': value.endDate === undefined ? undefined : (value.endDate.toISOString()),
        'comments': value.comments,
    };
}

