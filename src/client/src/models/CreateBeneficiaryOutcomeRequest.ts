/* tslint:disable */
/* eslint-disable */
/**
 * People in Need - Springboard Service
 * This backend is meant to be a simple CRUD service for supporting  collaboration between organizations and the beneficiaries supported by them.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { OutcomeEvent } from './OutcomeEvent';
import {
    OutcomeEventFromJSON,
    OutcomeEventFromJSONTyped,
    OutcomeEventToJSON,
} from './OutcomeEvent';

/**
 * 
 * @export
 * @interface CreateBeneficiaryOutcomeRequest
 */
export interface CreateBeneficiaryOutcomeRequest {
    /**
     * 
     * @type {OutcomeEvent}
     * @memberof CreateBeneficiaryOutcomeRequest
     */
    outcomeEvent?: OutcomeEvent;
    /**
     * 
     * @type {string}
     * @memberof CreateBeneficiaryOutcomeRequest
     */
    outcomeComment?: string;
    /**
     * 
     * @type {Date}
     * @memberof CreateBeneficiaryOutcomeRequest
     */
    outcomeDate?: Date;
}

/**
 * Check if a given object implements the CreateBeneficiaryOutcomeRequest interface.
 */
export function instanceOfCreateBeneficiaryOutcomeRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CreateBeneficiaryOutcomeRequestFromJSON(json: any): CreateBeneficiaryOutcomeRequest {
    return CreateBeneficiaryOutcomeRequestFromJSONTyped(json, false);
}

export function CreateBeneficiaryOutcomeRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateBeneficiaryOutcomeRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'outcomeEvent': !exists(json, 'outcomeEvent') ? undefined : OutcomeEventFromJSON(json['outcomeEvent']),
        'outcomeComment': !exists(json, 'outcomeComment') ? undefined : json['outcomeComment'],
        'outcomeDate': !exists(json, 'outcomeDate') ? undefined : (new Date(json['outcomeDate'])),
    };
}

export function CreateBeneficiaryOutcomeRequestToJSON(value?: CreateBeneficiaryOutcomeRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'outcomeEvent': OutcomeEventToJSON(value.outcomeEvent),
        'outcomeComment': value.outcomeComment,
        'outcomeDate': value.outcomeDate === undefined ? undefined : (value.outcomeDate.toISOString()),
    };
}

