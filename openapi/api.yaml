openapi: 3.0.3
info:
  title: People in Need - Springboard Service
  description: |-
    This backend is meant to be a simple CRUD service for supporting 
    collaboration between organizations and the beneficiaries supported by them.
  version: 1.0.0
servers:
  - url: "https://pttmuyg4gp.us-east-1.awsapprunner.com"
    description: Main deployed environment
  - url: "https://tpztctibrc.us-east-1.awsapprunner.com"
    description: Amit's environment
  - url: "https://fw22knfxhnc.us-east-1.awsapprunner.com"
    description: Daniel's environment
paths:
  /beneficiaries:
    post:
      tags:
        - beneficiary
      summary: Create a beneficiary.
      description: |
        Create a beneficiary.
      operationId: createBeneficiary
      requestBody:
        description: Beneficiary to create
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BeneficiaryCreationRequest"
      responses:
        "201":
          description: Successfully created a beneficiary.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Beneficiary"
    get:
      tags:
        - beneficiary
      summary: List beneficiaries.
      description: |
        Retrieve a list of beneficiaries currently tracked.
      operationId: listBeneficiaries
      responses:
        "200":
          description: Successfully retrieved list of beneficiaries.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Beneficiaries"
  /beneficiaries/{id}:
    parameters:
      - name: id
        in: path
        description: Beneficiary identifier
        required: true
        schema:
          type: string
    get:
      tags:
        - beneficiary
      summary: Retrieve a Beneficiary.
      description: |
        Retrieve a beneficiary based on id.
      operationId: findBeneficiary
      responses:
        "200":
          description: Successfully retrieved a beneficiary.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Beneficiary"
  /beneficiaries/{id}/outcomes:
    parameters:
      - name: id
        in: path
        description: Beneficiary identifier
        required: true
        schema:
          type: string
    post:
      tags:
        - beneficiary
      summary: Create a Beneficiary's outcome.
      description: |
        Create a beneficiary's outcome.
      operationId: createBeneficiaryOutcome
      requestBody:
        description: Outcome to create.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                outcomeEvent:
                  $ref: "#/components/schemas/OutcomeEvent"
                outcomeComment:
                  type: string
                outcomeDate:
                  type: string
                  format: date-time
      responses:
        "201":
          description: Successfully added a beneficiary outcome.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Beneficiary"
  /organizations:
    post:
      tags:
        - organization
      summary: Create an organization.
      description: |
        Create an organization.
      operationId: createOrganization
      requestBody:
        description: Organization to create
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationCreationRequest"
      responses:
        "201":
          description: Successfully created an organization.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
    get:
      parameters:
        - name: needId
          in: query
          description: Need identifier
          required: false
          schema:
            type: string
      tags:
        - organization
      summary: List organizations.
      description: |
        Retrieve a list of organizations currently tracked.
      operationId: listOrganizations
      responses:
        "200":
          description: Successfully retrieved list of organizations.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organizations"
  /organizations/{id}:
    parameters:
      - name: id
        in: path
        description: Organization identifier
        required: true
        schema:
          type: string
    get:
      tags:
        - organization
      summary: Retrieve an organization.
      description: |
        Retrieve an organization based on id.
      operationId: findOrganization
      responses:
        "200":
          description: Successfully retrieved an organization.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
  /needs:
    post:
      tags:
        - need
      summary: Create a need.
      description: |
        Create a need.
      operationId: createNeed
      requestBody:
        description: Need to create
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NeedCreationRequest"
      responses:
        "201":
          description: Successfully created a need.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Need"
    get:
      tags:
        - need
      summary: List needs.
      description: |
        Retrieve a list of needs currently tracked.
      operationId: listNeeds
      responses:
        "200":
          description: Successfully retrieved list of needs.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Needs"
  /needs/{id}:
    parameters:
      - name: id
        in: path
        description: Need identifier
        required: true
        schema:
          type: string
    get:
      tags:
        - need
      summary: Retrieve a need.
      description: |
        Retrieve a need based on id.
      operationId: findNeed
      responses:
        "200":
          description: Successfully retrieved a need.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Need"
  /activities:
    post:
      tags:
        - activity
      summary: Create an activity.
      description: |
        Create an activity.
      operationId: createActivity
      requestBody:
        description: Activity to create
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ActivityCreationRequest"
      responses:
        "201":
          description: Successfully created an activity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Activity"
    get:
      parameters:
        - name: status
          in: query
          description: Activity status
          required: false
          schema:
            $ref: "#/components/schemas/ActivityStatus"
        - name: organizationId
          in: query
          description: Organization identifier
          required: false
          schema:
            type: string
        - name: beneficiaryId
          in: query
          description: Beneficiary identifier
          required: false
          schema:
            type: string
        - name: needId
          in: query
          description: Need identifier
          required: false
          schema:
            type: string
      tags:
        - activity
      summary: List all activities.
      description: |
        Retrieve a list of all activities currently tracked.
      operationId: listActivities
      responses:
        "200":
          description: Successfully retrieved list of activities.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Activities"
  /activities/{id}:
    parameters:
      - name: id
        in: path
        description: Activity identifier
        required: true
        schema:
          type: string
    get:
      tags:
        - activity
      summary: Retrieve an activity.
      description: |
        Retrieve an activity based on id.
      operationId: findActivity
      responses:
        "200":
          description: Successfully retrieved an activity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Activity"
components:
  schemas:
    BeneficiaryCreationRequest:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        dateOfBirth:
          type: string
          format: date-time
        identity:
          type: string
          example: M
        phoneNumber:
          type: string
        cabinNumber:
          type: number
        needs:
          type: array
          items:
            type: string
        comments:
          type: string
    Beneficiary:
      type: object
      properties:
        id:
          type: string
          example: ben-123245asdf
        firstName:
          type: string
        lastName:
          type: string
        dateOfBirth:
          type: string
          format: date-time
        identity:
          type: string
          example: M
        phoneNumber:
          type: string
        cabinNumber:
          type: number
        needs:
          type: array
          items:
            type: string
        outcome:
          $ref: "#/components/schemas/OutcomeEvent"
        outcomeComment:
          type: string
        outcomeDate:
          type: string
          format: date-time
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        comments:
          type: string
    Beneficiaries:
      type: array
      items:
        $ref: "#/components/schemas/Beneficiary"
    BeneficiaryNeed:
      type: object
      properties:
        need:
          $ref: "#/components/schemas/Need"
        organization:
          $ref: "#/components/schemas/Organization"
    NeedCreationRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        alternativeName:
          type: string
    Need:
      type: object
      properties:
        id:
          type: string
          example: need-123245asdf
        name:
          type: string
        description:
          type: string
        alternativeName:
          type: string
    Needs:
      type: array
      items:
        $ref: "#/components/schemas/Need"
    OrganizationCreationRequest:
      type: object
      properties:
        name:
          type: string
        streetAddress:
          type: string
        state:
          type: string
        zipcode:
          type: string
        phoneNumber:
          type: string
        description:
          type: string
        needs:
          type: array
          items:
            type: string
    Organization:
      type: object
      properties:
        id:
          type: string
          example: org-123245asdf
        name:
          type: string
        streetAddress:
          type: string
        state:
          type: string
        zipcode:
          type: string
        phoneNumber:
          type: string
        description:
          type: string
        needs:
          type: array
          items:
            type: string
    Organizations:
      type: array
      items:
        $ref: "#/components/schemas/Organization"
    ActivityCreationRequest:
      type: object
      properties:
        organizationId:
          type: string
        beneficiaryId:
          type: string
        needId:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        status:
          $ref: "#/components/schemas/ActivityStatus"
        comments:
          type: string
    Activity:
      type: object
      properties:
        id:
          type: string
          example: act-123245asdf
        organizationId:
          type: string
        beneficiaryId:
          type: string
        needId:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        status:
          $ref: "#/components/schemas/ActivityStatus"
        comments:
          type: string
    Activities:
      type: array
      items:
        $ref: "#/components/schemas/Activity"
    ActivityStatus:
      type: string
      enum: [IN_PROGRESS, COMPLETED]
    OutcomeEvent:
      type: string
      enum:
        [
          Found Permanent Housing,
          Incarcerated,
          Deceased,
          Assertive Community,
          Long-term Substance Abuse Treatment,
          Rule Violations,
          Bank Account Opened,
          GED,
          Found Emplovment,
          Training Program,
          Other,
        ]
